package com.rjsoft.cabure.gui;

import com.rjsoft.cabure.controle.LivroCtrl;
import com.rjsoft.cabure.gui.listeners.TableListener;
import com.rjsoft.cabure.modelo.Livro;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CLIENTE
 */
public class PesquisarLivroPanel extends javax.swing.JPanel {

    /**
     * Creates new form Pesquisar_Livros
     */
    private LivroCtrl ctrl;
    private String[] colunas;
    private List<TableListener> listeners;

    public PesquisarLivroPanel(LivroCtrl ctrl) {
        this.ctrl = ctrl;
        colunas = new String[]{
            "Id",
            "Titulo",
            "Subtitulo",
            "Primeiro Autor",
            "Segundo Autor",
            "Terceiro Autor",
            "Local",
            "Edição",
            "Volume",
            "Páginas",
            "Editora",
            "Ano",
            "Série",
            "ISBN"
        };
        listeners = new ArrayList<>();
        initComponents();
    }

    public void addTableListener(TableListener tl) {
        listeners.add(tl);
    }

    public void removeTableListener(TableListener tl) {
        listeners.remove(tl);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelTitulo = new javax.swing.JLabel();
        textFieldTitulo = new javax.swing.JTextField();
        labelPrimeiroAutor = new javax.swing.JLabel();
        textFieldPrimeiroAutor = new javax.swing.JTextField();
        buttonPesquisar = new javax.swing.JButton();
        scrollTabelaLivros = new javax.swing.JScrollPane();
        tableLivros = new javax.swing.JTable();
        comboLimite = new javax.swing.JComboBox<>();
        botPagPrimeira = new javax.swing.JButton();
        botPagAnterior = new javax.swing.JButton();
        textFieldPagina = new javax.swing.JFormattedTextField();
        labelTotalPaginas = new javax.swing.JLabel();
        botPagProxima = new javax.swing.JButton();
        botPagUltima = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar Livro", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N

        labelTitulo.setText("Titulo:");

        textFieldTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldTituloActionPerformed(evt);
            }
        });

        labelPrimeiroAutor.setText("Primeiro Autor:");

        textFieldPrimeiroAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPrimeiroAutorActionPerformed(evt);
            }
        });

        buttonPesquisar.setText("Pesquisar");
        buttonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPesquisarActionPerformed(evt);
            }
        });

        tableLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Titulo", "Subtitulo", "Primeiro Autor", "Segundo Autor", "Terceiro Autor", "Local", "Edição", "Volume", "Páginas", "Editora", "Ano", "Série", "ISBN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableLivros.getTableHeader().setReorderingAllowed(false);
        scrollTabelaLivros.setViewportView(tableLivros);
        tableLivros.setRowSelectionAllowed(true);
        tableLivros.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        tableLivros.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2 && e.getButton() == MouseEvent.BUTTON1) {
                    int linhaSelecionada = tableLivros.getSelectedRow();
                    Object idObj = tableLivros.getValueAt(linhaSelecionada, 0);
                    Integer id = null;
                    System.out.println("opa");
                    try {
                        System.out.println("TRY antes ID");
                        id = Integer.parseInt(idObj.toString());
                        System.out.println("ID: " + id);
                    } catch (Exception ex) {
                    }
                    System.out.println("ANTES IF");
                    if (id != null) {
                        System.out.println("DPS IF");
                        for (TableListener tl : listeners) {
                            System.out.println("FOR LISTENER");
                            tl.linhaSelecionada(TableListener.TELA_PES_LIVRO, id);
                        }
                    }
                }
            }
        });

        int[] limites = ctrl.getPaginador().getLimites();
        for (int i = 0; i < limites.length; i++) {
            comboLimite.addItem("" + limites[i]);
        }
        comboLimite.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboLimiteItemStateChanged(evt);
            }
        });
        comboLimite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboLimiteActionPerformed(evt);
            }
        });

        botPagPrimeira.setText("|<");
        botPagPrimeira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botPagPrimeiraActionPerformed(evt);
            }
        });

        botPagAnterior.setText("<<");
        botPagAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botPagAnteriorActionPerformed(evt);
            }
        });

        textFieldPagina.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));

        labelTotalPaginas.setText("de 9999");

        botPagProxima.setText(">>");
        botPagProxima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botPagProximaActionPerformed(evt);
            }
        });

        botPagUltima.setText(">|");
        botPagUltima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botPagUltimaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldTitulo)
                    .addComponent(scrollTabelaLivros, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
                    .addComponent(textFieldPrimeiroAutor)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTitulo)
                            .addComponent(labelPrimeiroAutor)
                            .addComponent(buttonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(comboLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botPagPrimeira)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botPagAnterior)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFieldPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelTotalPaginas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botPagProxima)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botPagUltima)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(labelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPrimeiroAutor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldPrimeiroAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollTabelaLivros, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botPagPrimeira)
                    .addComponent(botPagAnterior)
                    .addComponent(labelTotalPaginas)
                    .addComponent(botPagProxima)
                    .addComponent(botPagUltima)
                    .addComponent(comboLimite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldPagina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private String gerarCondicao() {
        String condicao = "";
        String primeiroAutor = textFieldPrimeiroAutor.getText();
        String titulo = textFieldTitulo.getText();
        if (!primeiroAutor.isEmpty()) {
            condicao += String.format(" AND l.primeiroAutor like '%%%s%%'", primeiroAutor);
        }
        if (!titulo.isEmpty()) {
            condicao += String.format(" AND l.titulo like '%%%s%%'", titulo);
        }
        return condicao;
    }

    private void botPagAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botPagAnteriorActionPerformed
        ctrl.getPaginador().anterior();
        pesquisar();
    }//GEN-LAST:event_botPagAnteriorActionPerformed

    private void botPagProximaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botPagProximaActionPerformed
        ctrl.getPaginador().proxima();
        pesquisar();
    }//GEN-LAST:event_botPagProximaActionPerformed

    private void botPagUltimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botPagUltimaActionPerformed
        ctrl.getPaginador().ultima();
        pesquisar();
    }//GEN-LAST:event_botPagUltimaActionPerformed

    private void botPagPrimeiraActionPerformed(java.awt.event.ActionEvent evt) {
        ctrl.getPaginador().primeira();
        pesquisar();
    }


    private void textFieldTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldTituloActionPerformed

    private void textFieldPrimeiroAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPrimeiroAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPrimeiroAutorActionPerformed

    private void buttonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPesquisarActionPerformed
        ctrl.getPaginador().resetar();
        ctrl.getPaginador().setCondicao(gerarCondicao());
        pesquisar();
    }//GEN-LAST:event_buttonPesquisarActionPerformed

    private void comboLimiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboLimiteActionPerformed
        try {
            int l = ctrl.getPaginador().getLimites()[comboLimite.getSelectedIndex()];
            ctrl.getPaginador().setLimit(l);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_comboLimiteActionPerformed

    private void comboLimiteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboLimiteItemStateChanged
        try {
            int l = ctrl.getPaginador().getLimites()[comboLimite.getSelectedIndex()];
            ctrl.getPaginador().setLimit(l);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_comboLimiteItemStateChanged

    public void pesquisar() {
        List<Livro> livros = ctrl.pesquisar();
        listarLivros(livros);
        verificarPaginacao();
    }

    private void listarLivros(List<Livro> livros) {
        Object[][] data = new Object[livros.size()][colunas.length];
        for (int i = 0; i < livros.size(); i++) {
            Livro l = livros.get(i);
            data[i][0] = l.getID();
            data[i][1] = l.getTitulo();
            data[i][2] = l.getSubtitulo();
            data[i][3] = l.getPrimeiroAutor();
            data[i][4] = l.getSegundoAutor();
            data[i][5] = l.getTerceiroAutor();
            data[i][6] = l.getLocalidade();
            data[i][7] = l.getNumeroEdicao();
            data[i][8] = l.getVolume();
            data[i][9] = l.getNumeroPaginas();
            data[i][10] = l.getEditora();
            data[i][11] = new SimpleDateFormat("yyyy").format(l.getAno());
            data[i][12] = l.getSerie();
            data[i][13] = l.getIsbn();
        }
        DefaultTableModel dtm = new DefaultTableModel(data, colunas) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tableLivros.setModel(dtm);
    }

    private void verificarPaginacao() {
        botPagAnterior.setEnabled(ctrl.getPaginador().podeVoltar());
        botPagPrimeira.setEnabled(ctrl.getPaginador().podeVoltar());
        botPagProxima.setEnabled(ctrl.getPaginador().podeSeguir());
        botPagUltima.setEnabled(ctrl.getPaginador().podeSeguir());
        comboLimite.setSelectedItem(ctrl.getPaginador().getLimit());
        labelTotalPaginas.setText(" de " + ctrl.getPaginador().totalDePaginas());
        textFieldPagina.setText("" + ctrl.getPaginador().paginaAtual());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botPagAnterior;
    private javax.swing.JButton botPagPrimeira;
    private javax.swing.JButton botPagProxima;
    private javax.swing.JButton botPagUltima;
    private javax.swing.JButton buttonPesquisar;
    private javax.swing.JComboBox<String> comboLimite;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelPrimeiroAutor;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelTotalPaginas;
    private javax.swing.JScrollPane scrollTabelaLivros;
    private javax.swing.JTable tableLivros;
    private javax.swing.JFormattedTextField textFieldPagina;
    private javax.swing.JTextField textFieldPrimeiroAutor;
    private javax.swing.JTextField textFieldTitulo;
    // End of variables declaration//GEN-END:variables
}
